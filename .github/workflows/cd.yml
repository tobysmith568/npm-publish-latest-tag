name: CD

on:
  workflow_dispatch:
    inputs:
      version:
        description: A SemVer for the release
        default: ""
        required: true
        type: string

defaults:
  run:
    shell: pwsh

env:
  NODE_VERSION: 21

jobs:
  ci:
    name: Run CI
    uses: ./.github/workflows/ci.yml
    with:
      version: ${{ inputs.version }}
    secrets: inherit

  publish:
    name: Publish to npm

    needs:
      - ci

    runs-on: ubuntu-latest

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm ci

      - name: Download Build
        uses: actions/download-artifact@v5
        with:
          name: build
          path: ./dist

      - name: Publish
        run: npx nx run-many --target publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  release:
    name: Create GitHub Release

    needs:
      - publish

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          generate_release_notes: true
          body: |
            # Release v${{ inputs.version }}

            Download from [npm](https://www.npmjs.com/package/npm-publish-latest-tag/v/${{ inputs.version }}): `npm install npm-publish-latest-tag@${{ inputs.version }} --save-dev`

      - name: Calculate minor version
        id: minor
        run: |
          $version = "${{ inputs.version }}".Split(".") | Select -First 2 | Join-String -Separator "."
          "minorOnlyVersion=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Calculate major version
        id: major
        run: |
          $version = "${{ inputs.version }}".Split(".") | Select -First 1
          "majorOnlyVersion=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Tag Commit
        run: |
          git tag --force "v${{ inputs.version }}"
          git tag --force "v${{ steps.minor.outputs.minorOnlyVersion }}"
          git tag --force "v${{ steps.major.outputs.majorOnlyVersion }}"
          git push --tags --force
